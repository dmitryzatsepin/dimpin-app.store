<?php
/**
 * Telegram Webhook –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–µ—Ä–≤–µ—Ä–∞
 * –ê–≤—Ç–æ—Ä: AI Assistant
 * –î–∞—Ç–∞: 2025-08-23
 */

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
$log_file = '/var/log/telegram-webhook.log';

function log_message($message) {
    global $log_file;
    $timestamp = date('Y-m-d H:i:s');
    @file_put_contents($log_file, "[$timestamp] $message\n", FILE_APPEND | LOCK_EX);
}

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram
$input = file_get_contents('php://input');
$data = json_decode($input, true);

log_message("Received webhook: " . $input);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
if (!isset($data['message']['text'])) {
    http_response_code(200);
    exit;
}

$message_text = $data['message']['text'];
$chat_id = $data['message']['chat']['id'];

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
$authorized_chat_id = '395792611';
if ($chat_id != $authorized_chat_id) {
    log_message("Unauthorized access attempt from chat_id: $chat_id");
    http_response_code(200);
    exit;
}

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
switch ($message_text) {
    case '/start':
        $response = "ü§ñ <b>–ë–æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–µ—Ä–≤–µ—Ä–∞</b>

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
‚Ä¢ /status - —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
‚Ä¢ /logs - –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏
‚Ä¢ /resources - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
‚Ä¢ /restart_service - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
‚Ä¢ /daily_report - –ø–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç
‚Ä¢ /clear_logs - –æ—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞

–°–µ—Ä–≤–µ—Ä: " . gethostname();
        break;
        
    case '/status':
        $uptime = shell_exec('uptime -p');
        $load = shell_exec('uptime | awk -F\'load average:\' \'{print $2}\'');
        $memory = shell_exec('free -h | grep Mem | awk \'{print $3"/"$2}\'');
        $disk = shell_exec('df -h / | tail -1 | awk \'{print $5}\'');
        
        $response = "üìä <b>–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞</b>

üñ•Ô∏è <b>–°–µ—Ä–≤–µ—Ä:</b> " . gethostname() . "
‚è∞ <b>–ê–ø—Ç–∞–π–º:</b> " . trim($uptime) . "
üìà <b>–ù–∞–≥—Ä—É–∑–∫–∞:</b> " . trim($load) . "
üíæ <b>–ü–∞–º—è—Ç—å:</b> " . trim($memory) . "
üíø <b>–î–∏—Å–∫:</b> " . trim($disk);
        break;
        
    case '/logs':
        $recent_errors = shell_exec('tail -10 /var/log/angie/error.log 2>/dev/null | head -5');
        if (!empty(trim($recent_errors))) {
            $response = "üìù <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏:</b>\n\n" . $recent_errors;
        } else {
            $response = "‚úÖ <b>–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</b>";
        }
        break;
        
    case '/resources':
        $cpu = shell_exec('top -bn1 | grep "Cpu(s)" | awk \'{print $2}\' | cut -d\'%\' -f1');
        $memory = shell_exec('free | grep Mem | awk \'{printf("%.1f", $3/$2 * 100.0)}\'');
        $disk = shell_exec('df -h / | tail -1 | awk \'{print $5}\'');
        
        $response = "üíª <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:</b>

üñ•Ô∏è <b>CPU:</b> " . trim($cpu) . "%
üíæ <b>–ü–∞–º—è—Ç—å:</b> " . trim($memory) . "%
üíø <b>–î–∏—Å–∫:</b> " . trim($disk);
        break;
        
    case '/restart_service':
        $response = "üîÑ <b>–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤</b>

–î–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
‚Ä¢ /restart_angie
‚Ä¢ /restart_php";
        break;
        
    case '/restart_angie':
        $result = shell_exec('sudo systemctl restart angie 2>&1');
        if (strpos($result, 'error') === false) {
            $response = "‚úÖ <b>Angie –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ</b>";
        } else {
            $response = "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ Angie:</b>\n$result";
        }
        break;
        
    case '/restart_php':
        $result = shell_exec('sudo systemctl restart php8.3-fpm 2>&1');
        if (strpos($result, 'error') === false) {
            $response = "‚úÖ <b>PHP-FPM –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ</b>";
        } else {
            $response = "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ PHP-FPM:</b>\n$result";
        }
        break;
        
    case '/daily_report':
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –ø—Ä—è–º–æ –∑–¥–µ—Å—å
        $current_date = date('Y-m-d');
        
        // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—à–∏–±–æ–∫
        $errors_404 = shell_exec('grep "' . $current_date . '" /var/log/server-monitor-stats.txt 2>/dev/null | awk -F"=" \'{sum+=$2} END {print sum+0}\'') ?: 0;
        $errors_500 = shell_exec('grep "' . $current_date . '" /var/log/server-monitor-stats.txt 2>/dev/null | awk -F"=" \'{sum+=$3} END {print sum+0}\'') ?: 0;
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
        $uptime = trim(shell_exec('uptime -p 2>/dev/null') ?: 'unknown');
        $load = trim(shell_exec('uptime | awk -F\'load average:\' \'{print $2}\' 2>/dev/null') ?: 'unknown');
        $memory = trim(shell_exec('free -h | grep Mem | awk \'{print $3"/"$2}\' 2>/dev/null') ?: 'unknown');
        $disk = trim(shell_exec('df -h / | tail -1 | awk \'{print $5}\' 2>/dev/null') ?: 'unknown');
        
        $response = "üìä <b>–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞</b>

üìÖ <b>–î–∞—Ç–∞:</b> $current_date
üñ•Ô∏è <b>–°–µ—Ä–≤–µ—Ä:</b> " . gethostname() . "

üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫:</b>
‚Ä¢ 404 –æ—à–∏–±–∫–∏: $errors_404
‚Ä¢ 500 –æ—à–∏–±–∫–∏: $errors_500

üíª <b>–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã:</b>
‚Ä¢ –ê–ø—Ç–∞–π–º: $uptime
‚Ä¢ –ù–∞–≥—Ä—É–∑–∫–∞: $load
‚Ä¢ –ü–∞–º—è—Ç—å: $memory
‚Ä¢ –î–∏—Å–∫: $disk

üîß <b>–ö–æ–º–∞–Ω–¥—ã:</b>
‚Ä¢ /status - —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
‚Ä¢ /logs - –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏
‚Ä¢ /resources - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤";
        break;
        
    case '/clear_logs':
        // –û—á–∏—â–∞–µ–º –ª–æ–≥–∏
        $cleared = [];
        
        // –û—á–∏—â–∞–µ–º access –ª–æ–≥–∏ Angie
        $result = shell_exec('sudo truncate -s 0 /var/log/angie/access.log 2>&1');
        if (empty($result)) {
            $cleared[] = "‚úÖ Access –ª–æ–≥–∏ Angie";
        } else {
            $cleared[] = "‚ùå Access –ª–æ–≥–∏ Angie: $result";
        }
        
        // –û—á–∏—â–∞–µ–º error –ª–æ–≥–∏ Angie  
        $result = shell_exec('sudo truncate -s 0 /var/log/angie/error.log 2>&1');
        if (empty($result)) {
            $cleared[] = "‚úÖ Error –ª–æ–≥–∏ Angie";
        } else {
            $cleared[] = "‚ùå Error –ª–æ–≥–∏ Angie: $result";
        }
        
        // –û—á–∏—â–∞–µ–º –ª–æ–≥–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        $result = shell_exec('sudo truncate -s 0 /var/log/server-monitor.log 2>&1');
        if (empty($result)) {
            $cleared[] = "‚úÖ –õ–æ–≥–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞";
        } else {
            $cleared[] = "‚ùå –õ–æ–≥–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: $result";
        }
        
        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        $result = shell_exec('sudo truncate -s 0 /var/log/server-monitor-stats.txt 2>&1');
        if (empty($result)) {
            $cleared[] = "‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞";
        } else {
            $cleared[] = "‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: $result";
        }
        
        // –û—á–∏—â–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏ (—Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 1000 —Å—Ç—Ä–æ–∫ –æ—Å—Ç–∞–≤–ª—è–µ–º)
        shell_exec('sudo journalctl --vacuum-time=1d 2>/dev/null');
        $cleared[] = "‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏ (—Å—Ç–∞—Ä—à–µ 1 –¥–Ω—è)";
        
        $response = "üßπ <b>–û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</b>

" . implode("\n", $cleared) . "

üìä <b>–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ –º–µ—Å—Ç–∞:</b>
" . trim(shell_exec('df -h /var/log | tail -1 | awk \'{print "–î–∏—Å–∫ /var/log: " $5 " –∑–∞–Ω—è—Ç–æ"}\''));
        break;
        
    default:
        $response = "‚ùì <b>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞</b>

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.";
        break;
}

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ Telegram
$bot_token = '7953598163:AAFdNW7xA75BNySuPK44a6NrvZ_JX_GqtNQ';
$url = "https://api.telegram.org/bot$bot_token/sendMessage";

$post_data = [
    'chat_id' => $chat_id,
    'text' => $response,
    'parse_mode' => 'HTML'
];

$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, $url);
curl_setopt($ch, CURLOPT_POST, true);
curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($post_data));
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_TIMEOUT, 10);

$result = curl_exec($ch);
$http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
curl_close($ch);

log_message("Response sent. HTTP code: $http_code, Result: $result");

// –û—Ç–≤–µ—á–∞–µ–º Telegram, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ webhook
http_response_code(200);
echo 'OK';
?>
