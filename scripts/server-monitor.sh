#!/bin/bash

# –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–µ—Ä–≤–µ—Ä–∞ —Å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–º–∏ –æ—Ç—á–µ—Ç–∞–º–∏
# –ê–≤—Ç–æ—Ä: AI Assistant
# –î–∞—Ç–∞: 2025-08-23

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TELEGRAM_BOT_TOKEN="7953598163:AAFdNW7xA75BNySuPK44a6NrvZ_JX_GqtNQ"
TELEGRAM_CHAT_ID="395792611"
LOG_FILE="/var/log/server-monitor.log"
STATS_FILE="/var/log/server-monitor-stats.txt"
LAST_REPORT_FILE="/var/log/server-monitor-last-report.txt"

# –°–ø–∏—Å–æ–∫ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
CRITICAL_SERVICES=(
    "php8.3-fpm"
    "angie"
)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
send_telegram_notification() {
    local message="$1"
    local url="https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage"
    
    curl -s -X POST "$url" \
        -d "parse_mode=HTML" \
        -d "chat_id=${TELEGRAM_CHAT_ID}" \
        -d "text=${message}" > /dev/null 2>&1
    
    echo "$(date): Telegram notification sent: $message" >> "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ (–º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)
check_critical_errors() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º 500 –æ—à–∏–±–∫–∏
    local error_500_count=$(tail -50 /var/log/angie/error.log 2>/dev/null | grep -c "500\|502\|503\|504" 2>/dev/null || echo "0")
    
    if [ -n "$error_500_count" ] && [ "$error_500_count" -gt 0 ]; then
        local message="üö® <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞!</b>

üìä <b>–î–µ—Ç–∞–ª–∏:</b>
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ 500 –æ—à–∏–±–æ–∫: $error_500_count
‚Ä¢ –í—Ä–µ–º—è: $(date '+%Y-%m-%d %H:%M:%S')
‚Ä¢ –°–µ—Ä–≤–µ—Ä: $(hostname)

üîß <b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:</b>
‚Ä¢ –õ–æ–≥–∏: tail -f /var/log/angie/error.log
‚Ä¢ –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤: systemctl status angie php8.3-fpm"
        
        send_telegram_notification "$message"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–¥–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    for service in "${CRITICAL_SERVICES[@]}"; do
        if ! systemctl is-active --quiet "$service"; then
            local message="üö® <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–∏—Å —É–ø–∞–ª!</b>

üìä <b>–î–µ—Ç–∞–ª–∏:</b>
‚Ä¢ –°–µ—Ä–≤–∏—Å: $service
‚Ä¢ –í—Ä–µ–º—è: $(date '+%Y-%m-%d %H:%M:%S')
‚Ä¢ –°–µ—Ä–≤–µ—Ä: $(hostname)

üîß <b>–î–µ–π—Å—Ç–≤–∏—è:</b>
‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: systemctl restart $service
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞: systemctl status $service"
            
            send_telegram_notification "$message"
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
            systemctl restart "$service"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—à–∏–±–æ–∫ (–±–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
collect_error_stats() {
    local current_date=$(date +%Y-%m-%d)
    
    # –°—á–∏—Ç–∞–µ–º 404 –æ—à–∏–±–∫–∏
    local error_404_count=$(tail -100 /var/log/angie/error.log 2>/dev/null | grep -c "404\|No such file or directory" 2>/dev/null || echo "0")
    
    # –°—á–∏—Ç–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
    local critical_count=$(tail -100 /var/log/angie/error.log 2>/dev/null | grep -c "500\|502\|503\|504" 2>/dev/null || echo "0")
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    echo "$current_date: 404=$error_404_count, 500=$critical_count" >> "$STATS_FILE"
    
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    tail -1000 "$STATS_FILE" > "${STATS_FILE}.tmp" && mv "${STATS_FILE}.tmp" "$STATS_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤ (—Ç–æ–ª—å–∫–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ)
check_resources() {
    # CPU
    local cpu_usage=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1 2>/dev/null || echo "0")
    local cpu_usage_int=${cpu_usage%.*}
    
    if [ "$cpu_usage_int" -gt 90 ]; then
        echo "$(date): High CPU usage: ${cpu_usage}%" >> "$LOG_FILE"
    fi
    
    # Memory
    local mem_usage=$(free | grep Mem | awk '{printf("%.2f", $3/$2 * 100.0)}' 2>/dev/null || echo "0")
    local mem_usage_int=${mem_usage%.*}
    
    if [ "$mem_usage_int" -gt 90 ]; then
        echo "$(date): High memory usage: ${mem_usage}%" >> "$LOG_FILE"
    fi
    
    # Disk
    df -h | grep -E '^/dev/' | while read line; do
        local usage=$(echo "$line" | awk '{print $5}' | sed 's/%//' 2>/dev/null || echo "0")
        local mount_point=$(echo "$line" | awk '{print $6}')
        
        if [ "$usage" -gt 90 ]; then
            echo "$(date): Disk full: $mount_point ${usage}%" >> "$LOG_FILE"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
send_daily_report() {
    local current_date=$(date +%Y-%m-%d)
    local last_report_date=""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ–≥–¥–∞ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç—á–µ—Ç
    if [ -f "$LAST_REPORT_FILE" ]; then
        last_report_date=$(cat "$LAST_REPORT_FILE")
    fi
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å
    if [ "$current_date" != "$last_report_date" ]; then
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –¥–µ–Ω—å
        local errors_404=$(grep "$current_date" "$STATS_FILE" 2>/dev/null | awk -F'=' '{sum+=$2} END {print sum+0}')
        local errors_500=$(grep "$current_date" "$STATS_FILE" 2>/dev/null | awk -F'=' '{sum+=$3} END {print sum+0}')
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
        local uptime=$(uptime -p 2>/dev/null || echo "unknown")
        local load=$(uptime | awk -F'load average:' '{print $2}' 2>/dev/null || echo "unknown")
        local memory=$(free -h | grep Mem | awk '{print $3"/"$2}' 2>/dev/null || echo "unknown")
        local disk=$(df -h / | tail -1 | awk '{print $5}' 2>/dev/null || echo "unknown")
        
        local message="üìä <b>–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞</b>

üìÖ <b>–î–∞—Ç–∞:</b> $current_date
üñ•Ô∏è <b>–°–µ—Ä–≤–µ—Ä:</b> $(hostname)

üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫:</b>
‚Ä¢ 404 –æ—à–∏–±–∫–∏: $errors_404
‚Ä¢ 500 –æ—à–∏–±–∫–∏: $errors_500

üíª <b>–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã:</b>
‚Ä¢ –ê–ø—Ç–∞–π–º: $uptime
‚Ä¢ –ù–∞–≥—Ä—É–∑–∫–∞: $load
‚Ä¢ –ü–∞–º—è—Ç—å: $memory
‚Ä¢ –î–∏—Å–∫: $disk

üîß <b>–ö–æ–º–∞–Ω–¥—ã:</b>
‚Ä¢ /status - —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
‚Ä¢ /logs - –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏
‚Ä¢ /resources - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤"
        
        send_telegram_notification "$message"
        
        # –û—Ç–º–µ—á–∞–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç—á–µ—Ç–∞
        echo "$current_date" > "$LAST_REPORT_FILE"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
main() {
    echo "$(date): Simple server monitoring started" >> "$LOG_FILE"
    
    while true; do
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ (–º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)
        check_critical_errors
        
        # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—à–∏–±–æ–∫
        collect_error_stats
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Å—É—Ä—Å—ã
        check_resources
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –≤ 9:00
        if [ "$(date +%H:%M)" = "09:00" ]; then
            send_daily_report
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
        sleep 60
    done
}

# –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
main
